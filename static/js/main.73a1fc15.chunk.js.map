{"version":3,"sources":["components/Header.js","components/MemeGen.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","src","alt","Component","MemeGen","state","topText","bottomText","memeImage","memeImages","fetchMemes","fetch","then","response","json","memes","data","_this","setState","handleChange","event","_event$target","target","name","value","Object","defineProperty","newMeme","preventDefault","randomN","Math","floor","random","length","randomMeme","url","clearText","this","className","type","placeholder","onChange","onClick","App","components_Header","components_MemeGen","ReactDOM","render","components_App","document","getElementById"],"mappings":"2MAiBeA,yLAZX,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OACEC,IAAI,iEACJC,IAAI,WAENJ,EAAAC,EAAAC,cAAA,6BARaG,qBC2ENC,6MA1EbC,MAAQ,CACNC,QAAS,GACTC,WAAY,GACZC,UAAW,iEACXC,WAAY,MAOdC,WAAa,kBACXC,MAAM,qCACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAC,GAAY,IACRE,EAAUF,EAASG,KAAnBD,MAERE,EAAKC,SAAS,CAAET,WAAYM,SAGlCI,aAAe,SAAAC,GAAS,IAAAC,EACED,EAAME,OAAtBC,EADcF,EACdE,KAAMC,EADQH,EACRG,MACdP,EAAKC,SAALO,OAAAC,EAAA,EAAAD,CAAA,GACGF,EAAOC,OAIZG,QAAU,SAAAP,GACRA,EAAMQ,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWf,EAAKZ,MAAMI,WAAWwB,QAC3DC,EAAajB,EAAKZ,MAAMI,WAAWoB,GAASM,IAClDlB,EAAKC,SAAS,CAAEV,UAAW0B,OAG7BE,UAAY,SAAAhB,GACVA,EAAMQ,iBACNX,EAAKC,SAAS,CACZZ,QAAS,GACTC,WAAY,yFA9Bd8B,KAAK3B,8CAmCL,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMsC,UAAW,aACfxC,EAAAC,EAAAC,cAAA,SACEuC,KAAK,OACLf,MAAOa,KAAKhC,MAAMC,QAClBiB,KAAK,UACLiB,YAAY,MACZC,SAAUJ,KAAKlB,eAEjBrB,EAAAC,EAAAC,cAAA,SACEuC,KAAK,OACLf,MAAOa,KAAKhC,MAAME,WAClBgB,KAAK,aACLiB,YAAY,SACZC,SAAUJ,KAAKlB,eAGjBrB,EAAAC,EAAAC,cAAA,UAAQ0C,QAASL,KAAKV,SAAtB,WACA7B,EAAAC,EAAAC,cAAA,UAAQ0C,QAASL,KAAKD,WAAtB,UAEFtC,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,QACbxC,EAAAC,EAAAC,cAAA,OAAKC,IAAKoC,KAAKhC,MAAMG,UAAWN,IAAI,KACpCJ,EAAAC,EAAAC,cAAA,MAAIsC,UAAU,OAAOD,KAAKhC,MAAMC,SAChCR,EAAAC,EAAAC,cAAA,MAAIsC,UAAU,UAAUD,KAAKhC,MAAME,qBApEvBJ,aCcPwC,mLATX,OACE7C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4C,EAAD,MACA9C,EAAAC,EAAAC,cAAC6C,EAAD,cALU1C,aCFlB2C,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.73a1fc15.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../style.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <img\n          src=\"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\"\n          alt=\"Troll?\"\n        />\n        <p>MemeMake</p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"../style.css\";\n\nclass MemeGen extends Component {\n  state = {\n    topText: \"\",\n    bottomText: \"\",\n    memeImage: \"http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png\",\n    memeImages: []\n  };\n\n  componentDidMount() {\n    this.fetchMemes();\n  }\n\n  fetchMemes = () =>\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then(response => response.json())\n      .then(response => {\n        const { memes } = response.data;\n        //console.log(memes[0]);\n        this.setState({ memeImages: memes });\n      });\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  newMeme = event => {\n    event.preventDefault();\n    const randomN = Math.floor(Math.random() * this.state.memeImages.length);\n    const randomMeme = this.state.memeImages[randomN].url;\n    this.setState({ memeImage: randomMeme });\n  };\n\n  clearText = event => {\n    event.preventDefault();\n    this.setState({\n      topText: \"\",\n      bottomText: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={\"meme-form\"}>\n          <input\n            type=\"text\"\n            value={this.state.topText}\n            name=\"topText\"\n            placeholder=\"Top\"\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"text\"\n            value={this.state.bottomText}\n            name=\"bottomText\"\n            placeholder=\"Bottom\"\n            onChange={this.handleChange}\n          />\n\n          <button onClick={this.newMeme}>Memake!</button>\n          <button onClick={this.clearText}>Clear</button>\n        </form>\n        <div className=\"meme\">\n          <img src={this.state.memeImage} alt=\"\" />\n          <h2 className=\"top\">{this.state.topText}</h2>\n          <h2 className=\"bottom\">{this.state.bottomText}</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MemeGen;\n","import React, { Component } from \"react\";\nimport \"../style.css\";\n\nimport Header from \"./Header\";\nimport MemeGen from \"./MemeGen\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <MemeGen />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}